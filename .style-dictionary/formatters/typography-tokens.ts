import prettier from '@prettier/sync';
import { autogeneratedComment } from '../constant';

export const typographyTokenFormatter = {
  name: 'typographyTokenFormatter',
  format: ({ dictionary }: { dictionary: any }) => {
    const groupTokensByType = (tokens: any, prefix = ''): any => {
      const grouped: any = {};

      for (const [key, value] of Object.entries(tokens)) {
        if (value && typeof value === 'object' && !(value as any).value) {
          grouped[key] = groupTokensByType(
            value,
            prefix ? `${prefix}.${key}` : key
          );
        } else if (value && typeof value === 'object' && (value as any).value) {
          const token = value as any;

          if (
            (token.type === 'typography' ||
              token.type === 'custom-fontStyle') &&
            token.original?.value &&
            typeof token.original.value === 'object'
          ) {
            const originalValue = token.original.value;
            grouped[key] = {
              fontSize: originalValue.fontSize || 16,
              textDecoration: originalValue.textDecoration || 'none',
              fontFamily: originalValue.fontFamily || 'Inter',
              fontWeight: originalValue.fontWeight || 400,
              fontStyle: originalValue.fontStyle || 'normal',
              fontStretch: originalValue.fontStretch || 'normal',
              letterSpacing: originalValue.letterSpacing || 0,
              lineHeight:
                originalValue.lineHeight || originalValue.fontSize || 16,
              paragraphIndent: originalValue.paragraphIndent || 0,
              paragraphSpacing: originalValue.paragraphSpacing || 0,
              textCase: originalValue.textCase || 'none',
            };
          }
        }
      }

      return grouped;
    };

    const typographyTokens = groupTokensByType(dictionary.tokens);

    const output = typographyTokens.font || typographyTokens;

    const rawOutput = `export const typography = ${JSON.stringify(
      output,
      null,
      2
    )};`;

    return prettier.format(autogeneratedComment + rawOutput, {
      parser: 'typescript',
      singleQuote: true,
    });
  },
};
