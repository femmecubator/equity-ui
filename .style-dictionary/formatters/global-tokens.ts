import { type Dictionary } from 'style-dictionary';
import prettier from '@prettier/sync';
import { autogeneratedComment } from '../constant';

function groupTokensByType(dictionary: Dictionary) {
  const groupedTokens: Record<string, any> = {};

  dictionary.allTokens.forEach((token) => {
    const category = token.attributes?.item as string;
    const tokenName = token.name;
    const subitem = token.attributes?.subitem as string;

    if (category && tokenName) {
      if (!groupedTokens[category]) groupedTokens[category] = {};

      if (category === 'border') {
        let subcategory = 'width';
        if (tokenName.startsWith('radius')) {
          subcategory = 'radius';
        }

        if (!groupedTokens[category][subcategory]) {
          groupedTokens[category][subcategory] = {};
        }

        const value =
          typeof token.value === 'number' ? `${token.value}px` : token.value;
        groupedTokens[category][subcategory][tokenName] = value;
      } else if (category === 'spacing') {
        const value =
          typeof token.value === 'number' ? `${token.value}px` : token.value;
        groupedTokens[category][tokenName] = value;
      } else {
        groupedTokens[category][tokenName] = token.value;
      }
    }
  });

  return groupedTokens;
}

export const globalTokenFormatter = {
  name: 'custom/format',
  format: function ({ dictionary }) {
    const groupedTokens = groupTokensByType(dictionary);

    let output = 'export const base = {\n';

    Object.entries(groupedTokens).forEach(([type, tokens]) => {
      output += `  ${type}: {\n`;

      if (typeof tokens === 'object' && tokens !== null) {
        Object.entries(tokens).forEach(([key, value]) => {
          if (typeof value === 'object' && value !== null) {
            output += `    ${key}: {\n`;
            Object.entries(value).forEach(([subKey, subValue]) => {
              output += `      ${subKey}: ${JSON.stringify(subValue)},\n`;
            });
            output += '    },\n';
          } else {
            output += `    ${key}: ${JSON.stringify(value)},\n`;
          }
        });
      }

      output += '  },\n';
    });

    output += '};\n';

    return prettier.format(autogeneratedComment + output, {
      parser: 'typescript',
      singleQuote: true,
    });
  },
};
